{"ast":null,"code":"import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport isFunction from '../../lib/is-function';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport { Text, Paragraph } from '../../typography';\nvar internalStyles = {\n  marginTop: majorScale(3),\n  pointerEvents: 'none'\n};\nvar BrowseOrDragText = function BrowseOrDragText(props) {\n  var getBrowseOrDragText = props.browseOrDragText,\n    disabled = props.disabled,\n    maxFiles = props.maxFiles;\n  var defaultOrDragCopy = \"or drag \".concat(maxFiles === 1 ? 'a file' : 'files', \" here\");\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var ctaTextColor = disabled ? colors.gray500 : colors.blue400;\n  if (!isFunction(getBrowseOrDragText)) {\n    return /*#__PURE__*/React.createElement(Paragraph, internalStyles, /*#__PURE__*/React.createElement(Text, {\n      color: ctaTextColor\n    }, \"Browse \"), /*#__PURE__*/React.createElement(Text, {\n      color: disabled ? colors.gray500 : colors.gray700\n    }, defaultOrDragCopy));\n  }\n  var browseOrDragText = getBrowseOrDragText(maxFiles);\n  if (typeof browseOrDragText === 'string') {\n    return /*#__PURE__*/React.createElement(Paragraph, internalStyles, /*#__PURE__*/React.createElement(Text, {\n      color: ctaTextColor\n    }, browseOrDragText));\n  }\n  return browseOrDragText;\n};\nBrowseOrDragText.propTypes = {\n  /**\n   * Function to return a string or component for the 'Browse or drag' text\n   * @type {(maxFiles: number) => React.ReactNode}\n   */\n  browseOrDragText: PropTypes.func,\n  /**\n   * Renders the text in a muted color\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Maximum number of files to accept\n   */\n  maxFiles: PropTypes.number\n};\nexport default /*#__PURE__*/memo(BrowseOrDragText);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}