{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction borderProperty(theme, _ref) {\n  var border = _ref.border,\n    value = _ref.value;\n  if (Object.prototype.hasOwnProperty.call(theme.colors.border, value)) {\n    return \"1px solid \".concat(theme.colors.border[value]);\n  }\n  if (value === true) {\n    return \"1px solid \".concat(theme.colors.border[\"default\"]);\n  }\n  if (value === false) {\n    return null;\n  }\n  if (Object.prototype.hasOwnProperty.call(theme.colors.border, border)) {\n    return \"1px solid \".concat(theme.colors.border[border]);\n  }\n  if (border === true) {\n    return \"1px solid \".concat(theme.colors.border[\"default\"]);\n  }\n  return value || border;\n}\nvar baseStyle = function baseStyle(theme, props) {\n  var transitionStyles = {};\n  if (theme.shadows[props.hoverElevation] || theme.shadows[props.activeElevation]) {\n    Object.assign(transitionStyles, {\n      transitionDuration: '150ms',\n      transitionProperty: 'box-shadow, transform',\n      transitionTimingFunction: 'cubic-bezier(0.0, 0.0, 0.2, 1)'\n    });\n  }\n  var hoverStyles;\n  if (theme.shadows[props.hoverElevation]) {\n    hoverStyles = {\n      transform: 'translateY(-2px)',\n      boxShadow: \"shadows.\".concat(props.hoverElevation)\n    };\n  }\n  var activeStyles;\n  if (theme.shadows[props.activeElevation]) {\n    activeStyles = {\n      transform: 'translateY(-1px)',\n      boxShadow: \"shadows.\".concat(props.activeElevation)\n    };\n  }\n  return _objectSpread(_objectSpread({\n    background: theme.colors[props.background] || props.background,\n    boxShadow: theme.shadows[props.elevation],\n    borderTop: borderProperty(theme, {\n      border: props.border,\n      value: props.borderTop\n    }),\n    borderRight: borderProperty(theme, {\n      border: props.border,\n      value: props.borderRight\n    }),\n    borderBottom: borderProperty(theme, {\n      border: props.border,\n      value: props.borderBottom\n    }),\n    borderLeft: borderProperty(theme, {\n      border: props.border,\n      value: props.borderLeft\n    })\n  }, transitionStyles), {}, {\n    selectors: {\n      _hover: hoverStyles,\n      _active: activeStyles\n    }\n  });\n};\nvar appearances = {};\nvar sizes = {};\nexport default {\n  baseStyle: baseStyle,\n  appearances: appearances,\n  sizes: sizes\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}