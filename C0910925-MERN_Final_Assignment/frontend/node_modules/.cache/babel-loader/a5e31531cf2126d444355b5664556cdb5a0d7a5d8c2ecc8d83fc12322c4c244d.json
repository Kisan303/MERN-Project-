{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst hash_1 = __importDefault(require(\"@emotion/hash\"));\nconst flatten_object_1 = __importDefault(require(\"./utils/flatten-object\"));\nconst enhancers_1 = require(\"./enhancers\");\nconst is_production_1 = __importDefault(require(\"./utils/is-production\"));\nconst stylesheet = __importStar(require(\"./styles\"));\nconst cache = __importStar(require(\"./cache\"));\nconst keyframes = (friendlyName, timeline) => {\n  const hashedValue = (0, hash_1.default)((0, flatten_object_1.default)(timeline));\n  const name = `${friendlyName}_${hashedValue}`;\n  const cachedStyles = cache.get(friendlyName, hashedValue, 'keyframe');\n  if (cachedStyles != null) {\n    return name;\n  }\n  const keys = Object.keys(timeline);\n  const timelineStyles = keys.map(key => getStylesForTimelineKey(key, timeline[key] || {}));\n  const styles = getKeyframesStyles(name, timelineStyles);\n  cache.set(friendlyName, hashedValue, styles, 'keyframe');\n  stylesheet.add(styles);\n  return name;\n};\nconst flatten = values => {\n  const flattenedValues = [];\n  return flattenedValues.concat(...values);\n};\nconst getStylesForTimelineKey = (timelineKey, cssProps) => {\n  const cssPropKeys = Object.keys(cssProps);\n  const rules = flatten(cssPropKeys.map(cssPropKey => getRulesForKey(cssPropKey, cssProps)));\n  const key = timelineKeyToString(timelineKey);\n  const rulesString = rules.map(rule => {\n    const {\n      property,\n      value\n    } = rule;\n    if ((0, is_production_1.default)()) {\n      return `${property}:${value};`;\n    }\n    return `    ${property}: ${value};`;\n  }).join((0, is_production_1.default)() ? '' : '\\n');\n  if ((0, is_production_1.default)()) {\n    return `${key} {${rulesString}}`;\n  }\n  return `  ${key} {\\n${rulesString}\\n  }`;\n};\nconst getRulesForKey = (key, cssProps) => {\n  const value = cssProps[key];\n  const enhancer = enhancers_1.propEnhancers[key];\n  if (enhancer == null || value == null || value === false) {\n    return [];\n  }\n  const enhancedProp = enhancer(value, '');\n  if (enhancedProp == null) {\n    return [];\n  }\n  return enhancedProp.rules;\n};\nconst getKeyframesStyles = (name, rules) => {\n  const separator = (0, is_production_1.default)() ? '' : '\\n';\n  const openBrace = `{${separator}`;\n  const closeBrace = `${separator}}`;\n  const concatenatedRules = rules.join(separator);\n  return `@keyframes ${name} ${openBrace}${concatenatedRules}${closeBrace}`;\n};\nconst timelineKeyToString = timelineKey => {\n  const isNumber = !isNaN(Number(timelineKey));\n  return isNumber ? `${timelineKey}%` : timelineKey.toString();\n};\nexports.default = keyframes;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}