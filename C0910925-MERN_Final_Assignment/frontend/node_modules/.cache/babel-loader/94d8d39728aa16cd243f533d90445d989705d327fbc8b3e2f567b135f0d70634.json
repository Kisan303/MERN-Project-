{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;\nconst prop_types_1 = __importDefault(require(\"prop-types\"));\nconst get_css_1 = __importDefault(require(\"../get-css\"));\nexports.propTypes = {\n  fill: prop_types_1.default.string,\n  stroke: prop_types_1.default.string,\n  strokeDasharray: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  strokeDashoffset: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),\n  strokeLinecap: prop_types_1.default.string,\n  strokeMiterlimit: prop_types_1.default.number,\n  strokeWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number])\n};\nexports.propAliases = {};\nexports.propValidators = {};\nconst fill = {\n  className: 'fill',\n  cssName: 'fill',\n  jsName: 'fill'\n};\nconst stroke = {\n  className: 'strk',\n  cssName: 'stroke',\n  jsName: 'stroke'\n};\nconst strokeDasharray = {\n  className: 'strk-dshary',\n  cssName: 'stroke-dasharray',\n  jsName: 'strokeDasharray',\n  defaultUnit: ''\n};\nconst strokeDashoffset = {\n  className: 'strk-dshofst',\n  cssName: 'stroke-dashoffset',\n  jsName: 'strokeDashoffset',\n  defaultUnit: ''\n};\nconst strokeLinecap = {\n  className: 'strk-lncp',\n  cssName: 'stroke-linecap',\n  jsName: 'strokeLinecap',\n  safeValue: true\n};\nconst strokeMiterlimit = {\n  className: 'strk-mtrlmt',\n  cssName: 'stroke-miterlimit',\n  jsName: 'strokeMiterlimit',\n  defaultUnit: ''\n};\nconst strokeWidth = {\n  className: 'strk-w',\n  cssName: 'stroke-width',\n  jsName: 'strokeWidth',\n  defaultUnit: ''\n};\nexports.propEnhancers = {\n  fill: (value, selector) => (0, get_css_1.default)(fill, value, selector),\n  stroke: (value, selector) => (0, get_css_1.default)(stroke, value, selector),\n  strokeDasharray: (value, selector) => (0, get_css_1.default)(strokeDasharray, value, selector),\n  strokeDashoffset: (value, selector) => (0, get_css_1.default)(strokeDashoffset, value, selector),\n  strokeLinecap: (value, selector) => (0, get_css_1.default)(strokeLinecap, value, selector),\n  strokeMiterlimit: (value, selector) => (0, get_css_1.default)(strokeMiterlimit, value, selector),\n  strokeWidth: (value, selector) => (0, get_css_1.default)(strokeWidth, value, selector)\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}