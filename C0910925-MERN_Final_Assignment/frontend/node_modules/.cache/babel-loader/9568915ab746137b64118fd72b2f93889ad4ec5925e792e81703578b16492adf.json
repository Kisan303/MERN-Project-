{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"position\", \"size\", \"onClick\"];\nvar _POSITION_KEYS;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { keyframes } from 'ui-box';\nimport Positions from '../../constants/src/Position';\nimport { Pane } from '../../layers';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nvar pulseAnimation = keyframes('pulseAnimation', {\n  0: {\n    transform: 'scale(1)'\n  },\n  50: {\n    transform: 'scale(1.9)'\n  },\n  100: {\n    transform: 'scale(1)'\n  }\n});\nvar animationTiming = 'cubic-bezier(0, 0, 0.58, 1)';\nvar animationDuration = '1.8s';\nvar pulsarAnimationStyles = {\n  animation: \"\".concat(pulseAnimation, \" \").concat(animationDuration, \" \").concat(animationTiming, \" both infinite\")\n};\nvar POSITION_KEYS = (_POSITION_KEYS = {}, _defineProperty(_POSITION_KEYS, Positions.TOP_LEFT, ['top', 'left']), _defineProperty(_POSITION_KEYS, Positions.TOP_RIGHT, ['top', 'right']), _defineProperty(_POSITION_KEYS, Positions.BOTTOM_LEFT, ['bottom', 'left']), _defineProperty(_POSITION_KEYS, Positions.BOTTOM_RIGHT, ['bottom', 'right']), _POSITION_KEYS);\nvar getPositionProps = function getPositionProps(_ref) {\n  var position = _ref.position,\n    size = _ref.size;\n  var keys = POSITION_KEYS[position];\n  var props = {};\n  keys.forEach(function (key) {\n    var isYAxisKey = key === 'top' || key === 'bottom';\n    if (isYAxisKey) {\n      props[key] = -(size / 2);\n    } else {\n      props[key] = -size;\n    }\n  });\n  return props;\n};\nexport var Pulsar = /*#__PURE__*/memo(/*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var _ref2$position = _ref2.position,\n    position = _ref2$position === void 0 ? Positions.TOP_RIGHT : _ref2$position,\n    _ref2$size = _ref2.size,\n    size = _ref2$size === void 0 ? majorScale(1) : _ref2$size,\n    onClick = _ref2.onClick,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var positionProps = getPositionProps({\n    position: position,\n    size: size\n  });\n  var outerPadding = size * 0.25;\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    ref: ref,\n    position: \"absolute\",\n    borderRadius: \"50%\",\n    backgroundColor: colors.blue100,\n    boxSizing: \"content-box\",\n    opacity: 0.7,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: outerPadding\n  }, pulsarAnimationStyles, {\n    onClick: onClick,\n    cursor: onClick ? 'pointer' : undefined\n  }, positionProps, rest), /*#__PURE__*/React.createElement(Pane, {\n    width: size,\n    height: size,\n    backgroundColor: colors.blue200,\n    borderRadius: \"50%\",\n    opacity: 0.7\n  }));\n}));\nPulsar.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {\n  /**\n   * The position of the pulsar\n   */\n  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),\n  /**\n   * The width/height of the dot\n   */\n  size: PropTypes.number\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}