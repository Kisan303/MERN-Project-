{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClickable, useStyleConfig } from '../../hooks';\nimport { TickIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { pseudoSelectors } from '../../table/src/TableRow';\nimport { Text } from '../../typography';\nvar noop = function noop() {};\nvar internalStyles = {\n  display: 'flex',\n  alignItems: 'center'\n};\nvar MenuOption = /*#__PURE__*/memo(function MenuOption(props) {\n  var id = props.id,\n    children = props.children,\n    _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n    _props$onSelect = props.onSelect,\n    onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n    secondaryText = props.secondaryText,\n    _props$isSelected = props.isSelected,\n    isSelected = _props$isSelected === void 0 ? false : _props$isSelected;\n  var handleClick = useCallback(function (e) {\n    return onSelect(e);\n  }, [onSelect]);\n  var _useClickable = useClickable(),\n    onKeyDown = _useClickable.onKeyDown,\n    tabIndex = _useClickable.tabIndex;\n  var themedProps = useStyleConfig('MenuItem', {\n    appearance: appearance\n  }, pseudoSelectors, internalStyles);\n  var textProps = isSelected ? {\n    color: 'selected',\n    fontWeight: 500,\n    marginLeft: 16\n  } : {\n    marginLeft: 44\n  };\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    id: id,\n    role: \"menuitemradio\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    onKeyDown: onKeyDown,\n    \"data-isselectable\": \"true\",\n    \"aria-checked\": isSelected,\n    height: 40\n  }, themedProps), isSelected && /*#__PURE__*/React.createElement(TickIcon, {\n    \"aria-hidden\": true,\n    color: \"selected\",\n    marginLeft: 16,\n    marginRight: -4,\n    size: 16,\n    flexShrink: 0\n  }), /*#__PURE__*/React.createElement(Text, _extends({}, textProps, {\n    marginRight: 16,\n    flex: 1\n  }), children), secondaryText && /*#__PURE__*/React.createElement(Text, {\n    marginRight: 16,\n    color: \"muted\"\n  }, secondaryText));\n});\nMenuOption.propTypes = {\n  /**\n   * The id attribute of the menu option.\n   */\n  id: PropTypes.string,\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n  /**\n   * The icon before the label.\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string\n};\nexport default MenuOption;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}